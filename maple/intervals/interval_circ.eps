%!PS-Adobe-2.0 EPSF-2.0
%%Title: interval_circ.eps
%%Creator: gnuplot 4.2 patchlevel 5 
%%CreationDate: Wed May 18 11:52:42 2011
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (interval_circ.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 5 )
  /Author (DJ Platt)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Wed May 18 11:52:42 2011)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (November 2007)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {Gshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
1.000 UL
LTa
714 280 M
6276 0 V
stroke
LTb
714 280 M
63 0 V
6213 0 R
-63 0 V
stroke
630 280 M
[ [(Helvetica) 140.0 0.0 true true 0 (-0.8)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
714 790 M
6276 0 V
stroke
LTb
714 790 M
63 0 V
6213 0 R
-63 0 V
stroke
630 790 M
[ [(Helvetica) 140.0 0.0 true true 0 (-0.6)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
714 1300 M
6276 0 V
stroke
LTb
714 1300 M
63 0 V
6213 0 R
-63 0 V
stroke
630 1300 M
[ [(Helvetica) 140.0 0.0 true true 0 (-0.4)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
714 1811 M
6276 0 V
stroke
LTb
714 1811 M
63 0 V
6213 0 R
-63 0 V
stroke
630 1811 M
[ [(Helvetica) 140.0 0.0 true true 0 (-0.2)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
714 2321 M
6276 0 V
stroke
LTb
714 2321 M
63 0 V
6213 0 R
-63 0 V
stroke
630 2321 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
714 2831 M
6276 0 V
stroke
LTb
714 2831 M
63 0 V
6213 0 R
-63 0 V
stroke
630 2831 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.2)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
714 3341 M
6276 0 V
stroke
LTb
714 3341 M
63 0 V
6213 0 R
-63 0 V
stroke
630 3341 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.4)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
714 3852 M
6276 0 V
stroke
LTb
714 3852 M
63 0 V
6213 0 R
-63 0 V
stroke
630 3852 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.6)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
714 4362 M
6276 0 V
stroke
LTb
714 4362 M
63 0 V
6213 0 R
-63 0 V
stroke
630 4362 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.8)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
714 4872 M
6276 0 V
stroke
LTb
714 4872 M
63 0 V
6213 0 R
-63 0 V
stroke
630 4872 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 1)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
714 280 M
0 4592 V
stroke
LTb
714 280 M
0 63 V
0 4529 R
0 -63 V
stroke
714 140 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.2)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
1411 280 M
0 4592 V
stroke
LTb
1411 280 M
0 63 V
0 4529 R
0 -63 V
stroke
1411 140 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.4)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
2109 280 M
0 4592 V
stroke
LTb
2109 280 M
0 63 V
0 4529 R
0 -63 V
stroke
2109 140 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.6)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
2806 280 M
0 4592 V
stroke
LTb
2806 280 M
0 63 V
0 4529 R
0 -63 V
stroke
2806 140 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.8)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
3503 280 M
0 4592 V
stroke
LTb
3503 280 M
0 63 V
0 4529 R
0 -63 V
stroke
3503 140 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 1)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
4201 280 M
0 4592 V
stroke
LTb
4201 280 M
0 63 V
0 4529 R
0 -63 V
stroke
4201 140 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 1.2)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
4898 280 M
0 4389 V
0 140 R
0 63 V
stroke
LTb
4898 280 M
0 63 V
0 4529 R
0 -63 V
stroke
4898 140 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 1.4)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
5595 280 M
0 4389 V
0 140 R
0 63 V
stroke
LTb
5595 280 M
0 63 V
0 4529 R
0 -63 V
stroke
5595 140 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 1.6)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
6293 280 M
0 4389 V
0 140 R
0 63 V
stroke
LTb
6293 280 M
0 63 V
0 4529 R
0 -63 V
stroke
6293 140 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 1.8)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
6990 280 M
0 4592 V
stroke
LTb
6990 280 M
0 63 V
0 4529 R
0 -63 V
stroke
6990 140 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 2)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTb
714 4872 N
714 280 L
6276 0 V
0 4592 V
-6276 0 V
Z stroke
1.000 UP
1.000 UL
LTb
1.000 UP
1.000 UL
LT0
/Helvetica findfont 140 scalefont setfont
LTb
6339 4739 M
("interval_circ.txt") Rshow
LT0
3503 3596 Pls
3612 3596 Pls
3721 3596 Pls
3830 3596 Pls
3939 3596 Pls
4048 3596 Pls
4157 3596 Pls
4266 3596 Pls
4375 3596 Pls
4484 3596 Pls
4593 3596 Pls
4702 3596 Pls
4811 3596 Pls
4920 3596 Pls
5029 3596 Pls
5138 3596 Pls
5247 3596 Pls
5356 3596 Pls
5465 3596 Pls
5574 3596 Pls
5683 3596 Pls
5791 3596 Pls
5900 3596 Pls
6009 3596 Pls
6118 3596 Pls
6227 3596 Pls
6336 3596 Pls
6445 3596 Pls
6554 3596 Pls
6663 3596 Pls
6772 3596 Pls
6881 3596 Pls
6990 3596 Pls
3503 4872 Pls
3612 4872 Pls
3721 4872 Pls
3830 4872 Pls
3939 4872 Pls
4048 4872 Pls
4157 4872 Pls
4266 4872 Pls
4375 4872 Pls
4484 4872 Pls
4593 4872 Pls
4702 4872 Pls
4811 4872 Pls
4920 4872 Pls
5029 4872 Pls
5138 4872 Pls
5247 4872 Pls
5356 4872 Pls
5465 4872 Pls
5574 4872 Pls
5683 4872 Pls
5791 4872 Pls
5900 4872 Pls
6009 4872 Pls
6118 4872 Pls
6227 4872 Pls
6336 4872 Pls
6445 4872 Pls
6554 4872 Pls
6663 4872 Pls
6772 4872 Pls
6881 4872 Pls
6990 4872 Pls
3503 3596 Pls
3503 3636 Pls
3503 3676 Pls
3503 3716 Pls
3503 3756 Pls
3503 3796 Pls
3503 3836 Pls
3503 3875 Pls
3503 3915 Pls
3503 3955 Pls
3503 3995 Pls
3503 4035 Pls
3503 4075 Pls
3503 4115 Pls
3503 4155 Pls
3503 4194 Pls
3503 4234 Pls
3503 4274 Pls
3503 4314 Pls
3503 4354 Pls
3503 4394 Pls
3503 4434 Pls
3503 4473 Pls
3503 4513 Pls
3503 4553 Pls
3503 4593 Pls
3503 4633 Pls
3503 4673 Pls
3503 4713 Pls
3503 4752 Pls
3503 4792 Pls
3503 4832 Pls
3503 4872 Pls
6990 3596 Pls
6990 3636 Pls
6990 3676 Pls
6990 3716 Pls
6990 3756 Pls
6990 3796 Pls
6990 3836 Pls
6990 3875 Pls
6990 3915 Pls
6990 3955 Pls
6990 3995 Pls
6990 4035 Pls
6990 4075 Pls
6990 4115 Pls
6990 4155 Pls
6990 4194 Pls
6990 4234 Pls
6990 4274 Pls
6990 4314 Pls
6990 4354 Pls
6990 4394 Pls
6990 4434 Pls
6990 4473 Pls
6990 4513 Pls
6990 4553 Pls
6990 4593 Pls
6990 4633 Pls
6990 4673 Pls
6990 4713 Pls
6990 4752 Pls
6990 4792 Pls
6990 4832 Pls
6990 4872 Pls
2806 1300 Pls
2754 1350 Pls
2703 1396 Pls
2653 1439 Pls
2605 1479 Pls
2557 1517 Pls
2511 1553 Pls
2465 1586 Pls
2421 1617 Pls
2378 1647 Pls
2337 1674 Pls
2296 1700 Pls
2256 1725 Pls
2218 1748 Pls
2180 1770 Pls
2144 1791 Pls
2109 1811 Pls
2074 1829 Pls
2041 1847 Pls
2008 1864 Pls
1977 1880 Pls
1946 1895 Pls
1916 1909 Pls
1887 1923 Pls
1859 1936 Pls
1831 1948 Pls
1804 1960 Pls
1778 1971 Pls
1753 1982 Pls
1728 1992 Pls
1704 2002 Pls
1680 2012 Pls
1657 2021 Pls
1760 1045 Pls
1759 1085 Pls
1757 1123 Pls
1753 1159 Pls
1748 1195 Pls
1742 1229 Pls
1735 1262 Pls
1726 1294 Pls
1717 1325 Pls
1708 1355 Pls
1697 1384 Pls
1687 1412 Pls
1675 1438 Pls
1663 1464 Pls
1651 1489 Pls
1639 1513 Pls
1626 1536 Pls
1613 1558 Pls
1600 1580 Pls
1586 1600 Pls
1573 1620 Pls
1559 1639 Pls
1546 1658 Pls
1532 1676 Pls
1519 1693 Pls
1505 1710 Pls
1491 1726 Pls
1478 1741 Pls
1464 1756 Pls
1451 1770 Pls
1438 1784 Pls
1424 1798 Pls
1411 1811 Pls
2806 1300 Pls
2771 1282 Pls
2736 1264 Pls
2701 1247 Pls
2665 1231 Pls
2630 1215 Pls
2595 1201 Pls
2559 1187 Pls
2524 1174 Pls
2489 1162 Pls
2454 1151 Pls
2419 1140 Pls
2384 1130 Pls
2350 1121 Pls
2316 1112 Pls
2282 1104 Pls
2248 1096 Pls
2215 1090 Pls
2182 1083 Pls
2149 1078 Pls
2117 1072 Pls
2085 1068 Pls
2053 1064 Pls
2022 1060 Pls
1991 1057 Pls
1961 1054 Pls
1931 1051 Pls
1902 1050 Pls
1872 1048 Pls
1844 1047 Pls
1815 1046 Pls
1787 1045 Pls
1760 1045 Pls
1657 2021 Pls
1651 2013 Pls
1645 2004 Pls
1639 1996 Pls
1632 1988 Pls
1626 1981 Pls
1619 1973 Pls
1612 1965 Pls
1605 1958 Pls
1598 1950 Pls
1591 1943 Pls
1583 1936 Pls
1576 1929 Pls
1568 1922 Pls
1561 1915 Pls
1553 1908 Pls
1545 1902 Pls
1537 1895 Pls
1529 1889 Pls
1521 1882 Pls
1513 1876 Pls
1505 1870 Pls
1497 1864 Pls
1488 1858 Pls
1480 1852 Pls
1472 1847 Pls
1463 1841 Pls
1455 1836 Pls
1446 1831 Pls
1437 1826 Pls
1429 1820 Pls
1420 1816 Pls
1411 1811 Pls
714 280 Pls
867 280 Pls
1019 280 Pls
1172 280 Pls
1324 280 Pls
1477 280 Pls
1629 280 Pls
1782 280 Pls
1934 280 Pls
2087 280 Pls
2239 280 Pls
2392 280 Pls
2544 280 Pls
2697 280 Pls
2850 280 Pls
3002 280 Pls
3155 280 Pls
3307 280 Pls
3460 280 Pls
3612 280 Pls
3765 280 Pls
3917 280 Pls
4070 280 Pls
4222 280 Pls
4375 280 Pls
4528 280 Pls
4680 280 Pls
4833 280 Pls
4985 280 Pls
5138 280 Pls
5290 280 Pls
5443 280 Pls
5595 280 Pls
714 2066 Pls
867 2066 Pls
1019 2066 Pls
1172 2066 Pls
1324 2066 Pls
1477 2066 Pls
1629 2066 Pls
1782 2066 Pls
1934 2066 Pls
2087 2066 Pls
2239 2066 Pls
2392 2066 Pls
2544 2066 Pls
2697 2066 Pls
2850 2066 Pls
3002 2066 Pls
3155 2066 Pls
3307 2066 Pls
3460 2066 Pls
3612 2066 Pls
3765 2066 Pls
3917 2066 Pls
4070 2066 Pls
4222 2066 Pls
4375 2066 Pls
4528 2066 Pls
4680 2066 Pls
4833 2066 Pls
4985 2066 Pls
5138 2066 Pls
5290 2066 Pls
5443 2066 Pls
5595 2066 Pls
714 280 Pls
714 336 Pls
714 392 Pls
714 447 Pls
714 503 Pls
714 559 Pls
714 615 Pls
714 671 Pls
714 726 Pls
714 782 Pls
714 838 Pls
714 894 Pls
714 950 Pls
714 1005 Pls
714 1061 Pls
714 1117 Pls
714 1173 Pls
714 1229 Pls
714 1285 Pls
714 1340 Pls
714 1396 Pls
714 1452 Pls
714 1508 Pls
714 1564 Pls
714 1619 Pls
714 1675 Pls
714 1731 Pls
714 1787 Pls
714 1843 Pls
714 1898 Pls
714 1954 Pls
714 2010 Pls
714 2066 Pls
5595 280 Pls
5595 336 Pls
5595 392 Pls
5595 447 Pls
5595 503 Pls
5595 559 Pls
5595 615 Pls
5595 671 Pls
5595 726 Pls
5595 782 Pls
5595 838 Pls
5595 894 Pls
5595 950 Pls
5595 1005 Pls
5595 1061 Pls
5595 1117 Pls
5595 1173 Pls
5595 1229 Pls
5595 1285 Pls
5595 1340 Pls
5595 1396 Pls
5595 1452 Pls
5595 1508 Pls
5595 1564 Pls
5595 1619 Pls
5595 1675 Pls
5595 1731 Pls
5595 1787 Pls
5595 1843 Pls
5595 1898 Pls
5595 1954 Pls
5595 2010 Pls
5595 2066 Pls
6622 4739 Pls
1.000 UL
LTb
714 4872 N
714 280 L
6276 0 V
0 4592 V
-6276 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
