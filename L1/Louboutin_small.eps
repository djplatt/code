%!PS-Adobe-2.0
%%Title: Louboutin_small.eps
%%Creator: gnuplot 4.2 patchlevel 6 
%%CreationDate: Sun Apr  6 22:21:38 2014
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape true def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (Louboutin_small.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 6 )
  /Author (user)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Sun Apr  6 22:21:38 2014)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get stringwidth pop add} {pop} ifelse} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
854 448 M
63 0 V
6073 0 R
-63 0 V
stroke
770 448 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0)]
] -46.7 MRshow
1.000 UL
LTb
854 940 M
63 0 V
6073 0 R
-63 0 V
stroke
770 940 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.5)]
] -46.7 MRshow
1.000 UL
LTb
854 1431 M
63 0 V
6073 0 R
-63 0 V
stroke
770 1431 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 1)]
] -46.7 MRshow
1.000 UL
LTb
854 1923 M
63 0 V
6073 0 R
-63 0 V
stroke
770 1923 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 1.5)]
] -46.7 MRshow
1.000 UL
LTb
854 2414 M
63 0 V
6073 0 R
-63 0 V
stroke
770 2414 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 2)]
] -46.7 MRshow
1.000 UL
LTb
854 2906 M
63 0 V
6073 0 R
-63 0 V
stroke
770 2906 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 2.5)]
] -46.7 MRshow
1.000 UL
LTb
854 3397 M
63 0 V
6073 0 R
-63 0 V
stroke
770 3397 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 3)]
] -46.7 MRshow
1.000 UL
LTb
854 3889 M
63 0 V
6073 0 R
-63 0 V
stroke
770 3889 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 3.5)]
] -46.7 MRshow
1.000 UL
LTb
854 4380 M
63 0 V
6073 0 R
-63 0 V
stroke
770 4380 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 4)]
] -46.7 MRshow
1.000 UL
LTb
854 4872 M
63 0 V
6073 0 R
-63 0 V
stroke
770 4872 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 4.5)]
] -46.7 MRshow
1.000 UL
LTb
854 448 M
0 63 V
0 4361 R
0 -63 V
stroke
854 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0)]
] -46.7 MCshow
1.000 UL
LTb
1468 448 M
0 63 V
0 4361 R
0 -63 V
stroke
1468 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 100)]
] -46.7 MCshow
1.000 UL
LTb
2081 448 M
0 63 V
0 4361 R
0 -63 V
stroke
2081 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 200)]
] -46.7 MCshow
1.000 UL
LTb
2695 448 M
0 63 V
0 4361 R
0 -63 V
stroke
2695 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 300)]
] -46.7 MCshow
1.000 UL
LTb
3308 448 M
0 63 V
0 4361 R
0 -63 V
stroke
3308 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 400)]
] -46.7 MCshow
1.000 UL
LTb
3922 448 M
0 63 V
0 4361 R
0 -63 V
stroke
3922 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 500)]
] -46.7 MCshow
1.000 UL
LTb
4536 448 M
0 63 V
0 4361 R
0 -63 V
stroke
4536 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 600)]
] -46.7 MCshow
1.000 UL
LTb
5149 448 M
0 63 V
0 4361 R
0 -63 V
stroke
5149 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 700)]
] -46.7 MCshow
1.000 UL
LTb
5763 448 M
0 63 V
0 4361 R
0 -63 V
stroke
5763 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 800)]
] -46.7 MCshow
1.000 UL
LTb
6376 448 M
0 63 V
0 4361 R
0 -63 V
stroke
6376 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 900)]
] -46.7 MCshow
1.000 UL
LTb
6990 448 M
0 63 V
0 4361 R
0 -63 V
stroke
6990 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 1000)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTb
854 4872 N
854 448 L
6136 0 V
0 4424 V
-6136 0 V
Z stroke
LCb setrgbcolor
280 2660 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica) 140.0 0.0 true true 0 (min[|L\(1,chi\)|*log\(q/pi\)])]
] -46.7 MCshow
grestore
LTb
LCb setrgbcolor
3922 98 M
[ [(Helvetica) 140.0 0.0 true true 0 (Modulus)]
] -46.7 MCshow
LTb
1.000 UP
1.000 UL
LTb
1.000 UP
1.000 UL
LT0
/Helvetica findfont 140 scalefont setfont
885 854 Pls
897 880 Pls
909 1084 Pls
921 1210 Pls
934 1284 Pls
946 1683 Pls
952 1780 Pls
958 1201 Pls
971 1179 Pls
977 2045 Pls
983 2332 Pls
995 1529 Pls
1007 1438 Pls
1020 1746 Pls
1026 2318 Pls
1032 1434 Pls
1044 1439 Pls
1050 1820 Pls
1056 2011 Pls
1069 1751 Pls
1075 2859 Pls
1081 1466 Pls
1093 2276 Pls
1099 2868 Pls
1106 1789 Pls
1118 1683 Pls
1124 1967 Pls
1130 1717 Pls
1142 1424 Pls
1149 2879 Pls
1155 1793 Pls
1167 2341 Pls
1173 2540 Pls
1179 1598 Pls
1191 1922 Pls
1198 2826 Pls
1204 2070 Pls
1216 1406 Pls
1222 3774 Pls
1228 1515 Pls
1241 2367 Pls
1247 2386 Pls
1253 2147 Pls
1265 1693 Pls
1271 2211 Pls
1277 2190 Pls
1290 1813 Pls
1296 2728 Pls
1302 1477 Pls
1314 2689 Pls
1320 2485 Pls
1326 1772 Pls
1339 1805 Pls
1345 2684 Pls
1351 1991 Pls
1363 1936 Pls
1369 2663 Pls
1376 1879 Pls
1388 2164 Pls
1394 2652 Pls
1400 1729 Pls
1412 1924 Pls
1419 2223 Pls
1425 2088 Pls
1437 1905 Pls
1443 3486 Pls
1449 1760 Pls
1461 2335 Pls
1468 2961 Pls
1474 1664 Pls
1486 1813 Pls
1492 2568 Pls
1498 2563 Pls
1511 1853 Pls
1517 2995 Pls
1523 1827 Pls
1535 2183 Pls
1541 2969 Pls
1547 1960 Pls
1560 2189 Pls
1566 2644 Pls
1572 2300 Pls
1584 1920 Pls
1590 3353 Pls
1596 2006 Pls
1609 2068 Pls
1615 2281 Pls
1621 2049 Pls
1633 1796 Pls
1639 2776 Pls
1646 2220 Pls
1658 1739 Pls
1664 3117 Pls
1670 1904 Pls
1682 2803 Pls
1688 3094 Pls
1695 1998 Pls
1707 2001 Pls
1713 2905 Pls
1719 2420 Pls
1731 2025 Pls
1738 2956 Pls
1744 2156 Pls
1756 2361 Pls
1762 2615 Pls
1768 1905 Pls
1781 1879 Pls
1787 3250 Pls
1793 2572 Pls
1805 2076 Pls
1811 3357 Pls
1817 1871 Pls
1830 2047 Pls
1836 2449 Pls
1842 2029 Pls
1854 2212 Pls
1860 2385 Pls
1866 2894 Pls
1879 1818 Pls
1885 3733 Pls
1891 1905 Pls
1903 2336 Pls
1909 2676 Pls
1916 1956 Pls
1928 2328 Pls
1934 2440 Pls
1940 2492 Pls
1952 1804 Pls
1958 3676 Pls
1965 2043 Pls
1977 2505 Pls
1983 2786 Pls
1989 2154 Pls
2001 2114 Pls
2008 2932 Pls
2014 2596 Pls
2026 1942 Pls
2032 3349 Pls
2038 1915 Pls
2051 2460 Pls
2057 2621 Pls
2063 1969 Pls
2075 2110 Pls
2081 3223 Pls
2087 2507 Pls
2100 2123 Pls
2106 3019 Pls
2112 2278 Pls
2124 2418 Pls
2130 2674 Pls
2136 1910 Pls
2149 1907 Pls
2155 2861 Pls
2161 2493 Pls
2173 2198 Pls
2179 2992 Pls
2186 2224 Pls
2198 2481 Pls
2204 3077 Pls
2210 2118 Pls
2222 2253 Pls
2228 2941 Pls
2235 2339 Pls
2247 2053 Pls
2253 4153 Pls
2259 2066 Pls
2271 2507 Pls
2278 3056 Pls
2284 1994 Pls
2296 2330 Pls
2302 2709 Pls
2308 2356 Pls
2321 1989 Pls
2327 3906 Pls
2333 1950 Pls
2345 2363 Pls
2351 3000 Pls
2357 2488 Pls
2370 2101 Pls
2376 2834 Pls
2382 2388 Pls
2394 2274 Pls
2400 3693 Pls
2406 2035 Pls
2419 2853 Pls
2425 2800 Pls
2431 2132 Pls
2443 1972 Pls
2449 2955 Pls
2455 2426 Pls
2468 1964 Pls
2474 3455 Pls
2480 2477 Pls
2492 2756 Pls
2498 2838 Pls
2505 2219 Pls
2517 2121 Pls
2523 2703 Pls
2529 2536 Pls
2541 2298 Pls
2548 3896 Pls
2554 2068 Pls
2566 2620 Pls
2572 3388 Pls
2578 2072 Pls
2590 2041 Pls
2597 3080 Pls
2603 3005 Pls
2615 2061 Pls
2621 3503 Pls
2627 2256 Pls
2640 2514 Pls
2646 2978 Pls
2652 2256 Pls
2664 2411 Pls
2670 2790 Pls
2676 2546 Pls
2689 2104 Pls
2695 3385 Pls
2701 2067 Pls
2713 2686 Pls
2719 2949 Pls
2725 2510 Pls
2738 1971 Pls
2744 3073 Pls
2750 2678 Pls
2762 2096 Pls
2768 3867 Pls
2775 2024 Pls
2787 2870 Pls
2793 2885 Pls
2799 2053 Pls
2811 2173 Pls
2818 3298 Pls
2824 2895 Pls
2836 2248 Pls
2842 3396 Pls
2848 2326 Pls
2860 2659 Pls
2867 2903 Pls
2873 2210 Pls
2885 2209 Pls
2891 3134 Pls
2897 2562 Pls
2910 2288 Pls
2916 3513 Pls
2922 2266 Pls
2934 2494 Pls
2940 3353 Pls
2946 2110 Pls
2959 2216 Pls
2965 3094 Pls
2971 2762 Pls
2983 2196 Pls
2989 3682 Pls
2995 2052 Pls
3008 2612 Pls
3014 3115 Pls
3020 2268 Pls
3032 2265 Pls
3038 2787 Pls
3045 2921 Pls
3057 2181 Pls
3063 3574 Pls
3069 2168 Pls
3081 2529 Pls
3088 3026 Pls
3094 2439 Pls
3106 1817 Pls
3112 2913 Pls
3118 2737 Pls
3130 2309 Pls
3137 3995 Pls
3143 2163 Pls
3155 2815 Pls
3161 3199 Pls
3167 2208 Pls
3180 2071 Pls
3186 3120 Pls
3192 2627 Pls
3204 2192 Pls
3210 3500 Pls
3216 2458 Pls
3229 2773 Pls
3235 2977 Pls
3241 1915 Pls
3253 2128 Pls
3259 3239 Pls
3265 2737 Pls
3278 2376 Pls
3284 3534 Pls
3290 2091 Pls
3302 2924 Pls
3308 3490 Pls
3315 2231 Pls
3327 2375 Pls
3333 3094 Pls
3339 3129 Pls
3351 2252 Pls
3357 3682 Pls
3364 2094 Pls
3376 2437 Pls
3382 2673 Pls
3388 2539 Pls
3400 2385 Pls
3407 2976 Pls
3413 2953 Pls
3425 2367 Pls
3431 4691 Pls
3437 2160 Pls
3450 2547 Pls
3456 2825 Pls
3462 2651 Pls
3474 2464 Pls
3480 2958 Pls
3486 3011 Pls
3499 1920 Pls
3505 4037 Pls
3511 2261 Pls
3523 3121 Pls
3529 3045 Pls
3535 2287 Pls
3548 2319 Pls
3554 3197 Pls
3560 2877 Pls
3572 2141 Pls
3578 3554 Pls
3585 2371 Pls
3597 2810 Pls
3603 3360 Pls
3609 2338 Pls
3621 2341 Pls
3627 3155 Pls
3634 2985 Pls
3646 2545 Pls
3652 3641 Pls
3658 2133 Pls
3670 2502 Pls
3677 3207 Pls
3683 2127 Pls
3695 2033 Pls
3701 3299 Pls
3707 2935 Pls
3720 2151 Pls
3726 3738 Pls
3732 2314 Pls
3744 2880 Pls
3750 2917 Pls
3756 2265 Pls
3769 2410 Pls
3775 3485 Pls
3781 2861 Pls
3793 2218 Pls
3799 4277 Pls
3805 2102 Pls
3818 2950 Pls
3824 3275 Pls
3830 2542 Pls
3842 2169 Pls
3848 3008 Pls
3855 2710 Pls
3867 2078 Pls
3873 3905 Pls
3879 2355 Pls
3891 3121 Pls
3897 2972 Pls
3904 2427 Pls
3916 2161 Pls
3922 3304 Pls
3928 2347 Pls
3940 1971 Pls
3947 3833 Pls
3953 2525 Pls
3965 2618 Pls
3971 2839 Pls
3977 2241 Pls
3989 2481 Pls
3996 3149 Pls
4002 2737 Pls
4014 2456 Pls
4020 4053 Pls
4026 2318 Pls
4039 2951 Pls
4045 3318 Pls
4051 2089 Pls
4063 2310 Pls
4069 3207 Pls
4075 3359 Pls
4088 2336 Pls
4094 4104 Pls
4100 2221 Pls
4112 2840 Pls
4118 3492 Pls
4124 2385 Pls
4137 2394 Pls
4143 2936 Pls
4149 2743 Pls
4161 2372 Pls
4167 4035 Pls
4174 2330 Pls
4186 2673 Pls
4192 3189 Pls
4198 2099 Pls
4210 2195 Pls
4217 3291 Pls
4223 2804 Pls
4235 2284 Pls
4241 3882 Pls
4247 2283 Pls
4259 2942 Pls
4266 2865 Pls
4272 2134 Pls
4284 2162 Pls
4290 3492 Pls
4296 2867 Pls
4309 2163 Pls
4315 3490 Pls
4321 2684 Pls
4333 2957 Pls
4339 3081 Pls
4345 2265 Pls
4358 2024 Pls
4364 3348 Pls
4370 2798 Pls
4382 2217 Pls
4388 3564 Pls
4394 2251 Pls
4407 2760 Pls
4413 3497 Pls
4419 2426 Pls
4431 2382 Pls
4437 3060 Pls
4444 3037 Pls
4456 2321 Pls
4462 4247 Pls
4468 2483 Pls
4480 2937 Pls
4487 3012 Pls
4493 2197 Pls
4505 2668 Pls
4511 2842 Pls
4517 2845 Pls
4529 2267 Pls
4536 4686 Pls
4542 2261 Pls
4554 2704 Pls
4560 3132 Pls
4566 2721 Pls
4579 2156 Pls
4585 3058 Pls
4591 3094 Pls
4603 2281 Pls
4609 4095 Pls
4615 2125 Pls
4628 3367 Pls
4634 3553 Pls
4640 2180 Pls
4652 2338 Pls
4658 3442 Pls
4664 2832 Pls
4677 2491 Pls
4683 4087 Pls
4689 2517 Pls
4701 3054 Pls
4707 3474 Pls
4714 2267 Pls
4726 2144 Pls
4732 3050 Pls
4738 2790 Pls
4750 2402 Pls
4756 3873 Pls
4763 2275 Pls
4775 2768 Pls
4781 3673 Pls
4787 2289 Pls
4799 2213 Pls
4806 3753 Pls
4812 3068 Pls
4824 2340 Pls
4830 3627 Pls
4836 2423 Pls
4849 3052 Pls
4855 3291 Pls
4861 2256 Pls
4873 2413 Pls
4879 3014 Pls
4885 2678 Pls
4898 2225 Pls
4904 4853 Pls
4910 2344 Pls
4922 2749 Pls
4928 3177 Pls
4934 2634 Pls
4947 2257 Pls
4953 3338 Pls
4959 3004 Pls
4971 2409 Pls
4977 4345 Pls
4984 2433 Pls
4996 2999 Pls
5002 3536 Pls
5008 2447 Pls
5020 2499 Pls
5026 3495 Pls
5033 2626 Pls
5045 2212 Pls
5051 3991 Pls
5057 2611 Pls
5069 2909 Pls
5076 2906 Pls
5082 2155 Pls
5094 2480 Pls
5100 3208 Pls
5106 3056 Pls
5119 2531 Pls
5125 4113 Pls
5131 2046 Pls
5143 2892 Pls
5149 3905 Pls
5155 2349 Pls
5168 2322 Pls
5174 3417 Pls
5180 3229 Pls
5192 2244 Pls
5198 3966 Pls
5204 2356 Pls
5217 2797 Pls
5223 3123 Pls
5229 2118 Pls
5241 2696 Pls
5247 3116 Pls
5254 3076 Pls
5266 2429 Pls
5272 4466 Pls
5278 2407 Pls
5290 2403 Pls
5296 3375 Pls
5303 2526 Pls
5315 2444 Pls
5321 3780 Pls
5327 2869 Pls
5339 2255 Pls
5346 4149 Pls
5352 2328 Pls
5364 3260 Pls
5370 3140 Pls
5376 2362 Pls
5389 2085 Pls
5395 3729 Pls
5401 3152 Pls
5413 2341 Pls
5419 4151 Pls
5425 2618 Pls
5438 2889 Pls
5444 3266 Pls
5450 2435 Pls
5462 2215 Pls
5468 3346 Pls
5474 2636 Pls
5487 2471 Pls
5493 4238 Pls
5499 2170 Pls
5511 2919 Pls
5517 3584 Pls
5523 2186 Pls
5536 2499 Pls
5542 3394 Pls
5548 3400 Pls
5560 2542 Pls
5566 3859 Pls
5573 2277 Pls
5585 2805 Pls
5591 3396 Pls
5597 2428 Pls
5609 2706 Pls
5616 3401 Pls
5622 3174 Pls
5634 2247 Pls
5640 4464 Pls
5646 2245 Pls
5658 2625 Pls
5665 2990 Pls
5671 2744 Pls
5683 2209 Pls
5689 3064 Pls
5695 3116 Pls
5708 2353 Pls
5714 4122 Pls
5720 2311 Pls
5732 3230 Pls
5738 3062 Pls
5744 2356 Pls
5757 2508 Pls
5763 3918 Pls
5769 2873 Pls
5781 2306 Pls
5787 4461 Pls
5793 3032 Pls
5806 2983 Pls
5812 3025 Pls
5818 2229 Pls
5830 2132 Pls
5836 3418 Pls
5843 2770 Pls
5855 2753 Pls
5861 4251 Pls
5867 2352 Pls
5879 3174 Pls
5886 3825 Pls
5892 2255 Pls
5904 2223 Pls
5910 3372 Pls
5916 3509 Pls
5928 2251 Pls
5935 4041 Pls
5941 2209 Pls
5953 2978 Pls
5959 3447 Pls
5965 2597 Pls
5978 2630 Pls
5984 3316 Pls
5990 2943 Pls
6002 2381 Pls
6008 4731 Pls
6014 2324 Pls
6027 3114 Pls
6033 3253 Pls
6039 2631 Pls
6051 2656 Pls
6057 3351 Pls
6063 2946 Pls
6076 2296 Pls
6082 4310 Pls
6088 2386 Pls
6100 3147 Pls
6106 3108 Pls
6113 2466 Pls
6125 2274 Pls
6131 3691 Pls
6137 3120 Pls
6149 2147 Pls
6156 4154 Pls
6162 2456 Pls
6174 2944 Pls
6180 3150 Pls
6186 2330 Pls
6198 2243 Pls
6205 3013 Pls
6211 2971 Pls
6223 2605 Pls
6229 4159 Pls
6235 2335 Pls
6248 2577 Pls
6254 3833 Pls
6260 2296 Pls
6272 2379 Pls
6278 3071 Pls
6284 3249 Pls
6297 2326 Pls
6303 4126 Pls
6309 2506 Pls
6321 2747 Pls
6327 2834 Pls
6333 2399 Pls
6346 2643 Pls
6352 3674 Pls
6358 3010 Pls
6370 2479 Pls
6376 4677 Pls
6383 2259 Pls
6395 3173 Pls
6401 3211 Pls
6407 2647 Pls
6419 2530 Pls
6425 3396 Pls
6432 2817 Pls
6444 2305 Pls
6450 4252 Pls
6456 2313 Pls
6468 3376 Pls
6475 3366 Pls
6481 2593 Pls
6493 2432 Pls
6499 3619 Pls
6505 3086 Pls
6518 2428 Pls
6524 4358 Pls
6530 2637 Pls
6542 2842 Pls
6548 3100 Pls
6554 2448 Pls
6567 2642 Pls
6573 3354 Pls
6579 2660 Pls
6591 2729 Pls
6597 4195 Pls
6603 2358 Pls
6616 2845 Pls
6622 3813 Pls
6628 2357 Pls
6640 2345 Pls
6646 3576 Pls
6653 3536 Pls
6665 2579 Pls
6671 3943 Pls
6677 2294 Pls
6689 2871 Pls
6695 3631 Pls
6702 2368 Pls
6714 2623 Pls
6720 3425 Pls
6726 3272 Pls
6738 2606 Pls
6745 4581 Pls
6751 2492 Pls
6763 2735 Pls
6769 2839 Pls
6775 2693 Pls
6788 2255 Pls
6794 3549 Pls
6800 2859 Pls
6812 2171 Pls
6818 3645 Pls
6824 2415 Pls
6837 3480 Pls
6843 3392 Pls
6849 2379 Pls
6861 2552 Pls
6867 4018 Pls
6873 2816 Pls
6886 2405 Pls
6892 4129 Pls
6898 2755 Pls
6910 3252 Pls
6916 3558 Pls
6923 2557 Pls
6935 2391 Pls
6941 3467 Pls
6947 2887 Pls
6959 2494 Pls
6965 3721 Pls
6972 2190 Pls
6984 2800 Pls
6990 3824 Pls
1.000 UL
LTb
854 4872 N
854 448 L
6136 0 V
0 4424 V
-6136 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
%%Pages: 1
